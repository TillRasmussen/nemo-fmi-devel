## (Super)Computer configuration template
##---------------------------------------------------

## Copy to root, rename it and then fill in according to your (super)computer environment
## Rules for completion: undefined variables (=) are mandatory & void variables (='') are optional
## Look into other configuration file for examples


## Default settings
##---------------------------------------------------
# (Super)Computer environment (${TRUS_XIOS} is already defined in the user configuration file)
TRUS_ENVI=${TRUS_XIOS}/arch/arch-${TRUS_HPCC}
## If `module` is available, ${TRUS_ENVI}.env will be sourced
## If not (scheduled jobs), it will be ${TRUS_ENVI}.path or finally ${TRUS_ENVI}

## Comparison command with restart files as argument (think to append $PATH by any way)
TRUS_CDOD='cdo diffn'

[ -z "${TRUS_NPRO}" ] && TRUS_NPRO=     ## Number of compiling processes
[ -z "${TRUS_TOUT}" ] && TRUS_TOUT=     ## Timeout for computation (s)


## (Super)computer environment
##---------------------------------------------------
## Job commands will almost always be used with `eval ${TRUS_JXXX}` because
## they will certainly need job ID number as argument for working
TRUS_JSPT=       ## Submission script contained ./batch folder, will be copied to testing folder
TRUS_JSUB=	 ## Submit a job and get his ID on the fly (assigned to ${TRUS_JIDN})
        	   ## ex: `llsubmit ${TRUS_JSPT} | grep -oe '\<[0-9]*\>'`
TRUS_JSTA=   	 ## Test state of the submitted job (true -> pending/running or false -> completed/crashed)
                   ## ex: "llq | grep \${TRUS_JIDN}"
TRUS_JKIL=   	 ## Kill the submitted job
                   ## ex: "llcancel   \${TRUS_JIDN}"

## Computational performances of job (respectively elapsed time, max physical & virtual memory)
TRUS_JTIM=''       ## ex: "grep IdrisMemMPI NEMO_CI_\${TRUS_JIDN} | cut -d, -f1 | awk '{print \$(NF-1),\$NF}"
TRUS_JPME=''       ## ex: "grep IdrisMemMPI NEMO_CI_\${TRUS_JIDN} | cut -d, -f3 | awk '{print \$3     ,\$4 }"
TRUS_JVME=''       ## ex: "grep IdrisMemMPI NEMO_CI_\${TRUS_JIDN} | cut -d, -f2 | awk '{print \$3     ,\$4 }"

TRUS_JINF=''   	 ## Get job informations to fill in a logfile during computation
                   ## ex: "llq -x \${TRUS_JIDN}"

## Compiler (use with `${TRUS_CMPV} --version`)
TRUS_CMPV=''       ## ex: 'ifort'|'gfortran'|'pgfortran'|...

## Software/libraries (string pattern to match just before the release number in $PATH)
## Respectively CDO (Climate Data Operators) / MPI libraries / NetCDF libraries
TRUS_CDOR=''       ## ex: 'cdo/'|'netcdf-utils-'
TRUS_MPIR=''       ## ex: 'intel/impi/'|'bullxmpi/'
TRUS_CDFR=''       ## ex: 'netcdf/'|'netcdf-'
